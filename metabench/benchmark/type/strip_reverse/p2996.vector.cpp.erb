// Copyright Louis Dionne 2017
// Distributed under the Boost Software License, Version 1.0.
// (See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)
#include <array>
#include <ranges>
#include <experimental/meta>

template<class...> struct type_list { };

template<class... Ts>
using strip_reverse = typename [:substitute(^type_list, std::array{^Ts...}
                                                      | std::views::drop(1)
                                                      | std::views::reverse
                                                      | std::views::drop(1)
                                                      | std::ranges::to<std::vector>()):];

template<int> struct x;

<% env[:k].times do |k| %>
    <% (env[:p]*n/100).times do |p| %>
    #if defined(METABENCH)
    using <%= "result#{p}#{k}" %> = strip_reverse<<%= ((1)..(n)).map { |i| "x<#{i}>" }.join(', ') %>>;
    #endif
    <% end %>
<% end %>

int main() {}
