// Copyright Louis Dionne 2017
// Distributed under the Boost Software License, Version 1.0.
// (See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)

#define DISABLE_STATIC_ASSERT_TESTS
#include <mp>

template<class...> struct type_list { };

template<class... Ts>
constexpr auto strip_reverse_impl = [] {
  mp::array<mp::meta_t, sizeof...(Ts) - 2> r;
  mp::array a{mp::meta<Ts>...};
  const auto size = r.size();
  for (auto i = size; i >= 1; --i) { r[i-1] = a[i]; }
  return r;
};

template<class... Ts>
using strip_reverse = mp::apply_t<type_list, strip_reverse_impl<Ts...>()>;

template<int> struct x;

<% env[:k].times do |k| %>
    <% (env[:p]*n/100).times do |p| %>
    #if defined(METABENCH)
    using <%= "result#{p}#{k}" %> = strip_reverse<<%= ((1)..(n)).map { |i| "x<#{i}>" }.join(', ') %>>;
    #endif
    <% end %>
<% end %>

int main() {}
