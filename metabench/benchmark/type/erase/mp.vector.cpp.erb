// Copyright Bruno Dutra 2016
// Distributed under the Boost Software License, Version 1.0.
// (See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)

#define DISABLE_STATIC_ASSERT_TESTS
#include <mp>

template<class...> struct type_list { };

template<auto N, class... Ts>
using erase = mp::apply_t<type_list,
  [] {
    mp::array v{mp::meta<Ts...>};
    mp::vector<mp::meta_t, sizeof...(Ts)-1> r;
    for (auto i = 0; i < N; ++i) {
      if (i != N) {
        r.push_back(v[i]);
      }
    }
    return r;
  }()>;

template<int> struct x;

<% env[:k].times do |k| %>

#if defined(METABENCH)
using <%= "result#{k}" %> = erase<<%= k*n/env[:k] %>, <%= ((k*n+1)..(k*n+n)).map { |i| "x<#{i}>" }.join(', ') %>>;
#endif

<% end %>

int main() {}
