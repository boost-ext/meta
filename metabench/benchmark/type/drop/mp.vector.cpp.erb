// Copyright Bruno Dutra 2017
// Distributed under the Boost Software License, Version 1.0.
// (See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)
#define DISABLE_STATIC_ASSERT_TESTS
#include <mp>

template<class...> struct type_list { };

template<auto N, class... Ts>
using drop = mp::apply_t<type_list,
    [] {
      mp::array v{mp::meta<Ts>...};
      mp::array<mp::meta_t, sizeof...(Ts)-N> r{};
      for (auto i=N; i < v.size(); ++i) { r[i-N] = v[i]; }
      return r;
    }()>;

template<int> struct x;

<% env[:k].times do |k| %>

#if defined(METABENCH)
using <%= "result#{k}" %> = drop<%= k*n/env[:k] %>, <%= ((k*n+1)..(k*n+n)).map { |i| "x<#{i}>" }.join(', ') %>>;
#endif
<% end %>

int main() {}
